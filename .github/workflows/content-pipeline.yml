name: Content Pipeline (Scheduled)

on:
  schedule:
    # 06:00 UTC - Morning EU, catches Asia overnight + EU morning
    - cron: '0 6 * * *'
    # 18:00 UTC - Afternoon US, catches US daytime discussions
    - cron: '0 18 * * *'
    # 02:00 UTC - Evening US, catches late US + early Asia
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering for testing

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Phase 1: Collect and Enrich (sequential)
  collect-enrich:
    runs-on: ubuntu-latest
    outputs:
      has-content: ${{ steps.check-content.outputs.has-content }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Cache Hugo resources
        uses: actions/cache@v4
        with:
          path: site/resources/_gen
          key: ${{ runner.os }}-hugo-${{ hashFiles('content/**') }}
          restore-keys: |
            ${{ runner.os }}-hugo-
      
      - name: Install dependencies
        run: uv sync
      
      - name: 📥 Collect content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          HACKERNEWS_ENABLED: true
          GITHUB_TRENDING_ENABLED: true
          MASTODON_ENABLED: true
        run: uv run python -m src.collect
      
      - name: ✨ Enrich content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: uv run python -m src.enrich
      
      - name: Check if we have enriched content
        id: check-content
        run: |
          if ls data/enriched_*.json 1> /dev/null 2>&1; then
            echo "has-content=true" >> $GITHUB_OUTPUT
          else
            echo "has-content=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Upload enriched data
        uses: actions/upload-artifact@v4
        with:
          name: enriched-data
          path: |
            data/collected_*.json
            data/enriched_*.json
            data/*_patterns.json
            data/*_feedback.json
          retention-days: 1
  
  # Phase 2: Generate articles (sequential to prevent duplicates)
  generate-articles:
    needs: collect-enrich
    if: needs.collect-enrich.outputs.has-content == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: uv sync
      
      - name: Download enriched data
        uses: actions/download-artifact@v4
        with:
          name: enriched-data
          path: data
      
      - name: 📝 Generate articles
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          HUGO_BASE_URL: https://hardcoreprawn.github.io/tech-content-curator
          QUALITY_THRESHOLD: 0.5
          SOURCE_COOLDOWN_DAYS: 7
        run: |
          # Generate 10 articles sequentially to prevent race conditions
          uv run python -m src.generate --max-articles 10 --generate-images
      
      - name: Upload generated content
        uses: actions/upload-artifact@v4
        with:
          name: generated-articles
          path: |
            content/posts/*.md
            site/static/images/*.png
          retention-days: 1
  
  # Phase 3: Commit and Deploy (sequential)
  deploy:
    needs: generate-articles
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Download enriched data
        uses: actions/download-artifact@v4
        with:
          name: enriched-data
          path: data
      
      - name: Download generated articles
        uses: actions/download-artifact@v4
        with:
          name: generated-articles
          path: .
      
      - name: 💾 Commit pipeline outputs
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Only commit articles, images, and pattern files (not raw data)
          git add content/posts/ site/static/images/ || true
          git add data/*_patterns.json data/*_feedback.json || true
          
          if git diff --staged --quiet; then
            echo "No changes from pipeline run"
          else
            ARTICLE_COUNT=$(git diff --staged --name-only | grep 'content/posts/.*\.md' | wc -l || echo "0")
            git commit -m "🔄 Content Pipeline - $(date -u +%Y-%m-%d_%H%M%S)

            Generated $ARTICLE_COUNT articles in parallel batches
            - Updated adaptive learning patterns
            
            Scheduled content collection run"
            git push
          fi
      
      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true
      
      - name: 🏗️ Build Hugo site
        run: |
          cd site
          hugo --minify
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/public
      
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: 🔔 Notify search engines (sitemap)
        run: |
          SITEMAP_URL="${{ steps.deployment.outputs.page_url }}sitemap.xml"
          echo "Sitemap: $SITEMAP_URL"
          # Bing supports anonymous sitemap ping
          curl -sS "https://www.bing.com/webmaster/ping.aspx?siteMap=$SITEMAP_URL" || true
      
      - name: 📊 Pipeline summary
        run: |
          ARTICLE_COUNT=$(ls content/posts/*.md 2>/dev/null | wc -l)
          echo "## Content Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Collection & Enrichment completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Generated articles (sequential, no duplicates)" >> $GITHUB_STEP_SUMMARY
          echo "✅ Site built and deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "📝 Total articles: $ARTICLE_COUNT" >> $GITHUB_STEP_SUMMARY
